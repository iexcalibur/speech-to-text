"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useAudioRecorder.ts":
/*!***************************************!*\
  !*** ./src/hooks/useAudioRecorder.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAudioRecorder: function() { return /* binding */ useAudioRecorder; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst useAudioRecorder = ()=>{\n    const [isRecording, setIsRecording] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [mediaRecorder, setMediaRecorder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [audioChunks, setAudioChunks] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const startRecording = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        try {\n            console.log(\"Requesting microphone access...\");\n            const stream = await navigator.mediaDevices.getUserMedia({\n                audio: true\n            });\n            console.log(\"Microphone access granted\");\n            const recorder = new MediaRecorder(stream);\n            setMediaRecorder(recorder);\n            setAudioChunks([]);\n            recorder.ondataavailable = (event)=>{\n                console.log(\"Received audio chunk:\", event.data.size, \"bytes\");\n                if (event.data.size > 0) {\n                    setAudioChunks((chunks)=>[\n                            ...chunks,\n                            event.data\n                        ]);\n                }\n            };\n            recorder.onstart = ()=>{\n                console.log(\"MediaRecorder started\");\n                setAudioChunks([]);\n            };\n            recorder.onstop = ()=>{\n                console.log(\"MediaRecorder stopped\");\n            };\n            recorder.onerror = (event)=>{\n                console.error(\"MediaRecorder error:\", event);\n            };\n            recorder.start(1000);\n            setIsRecording(true);\n        } catch (error) {\n            console.error(\"Error accessing microphone:\", error);\n            throw error;\n        }\n    }, []);\n    const stopRecording = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        return new Promise((resolve)=>{\n            if (mediaRecorder && mediaRecorder.state !== \"inactive\") {\n                console.log(\"Stopping MediaRecorder...\");\n                mediaRecorder.addEventListener(\"stop\", ()=>{\n                    console.log(\"MediaRecorder stopped, chunks:\", audioChunks.length);\n                    resolve();\n                });\n                mediaRecorder.requestData();\n                mediaRecorder.stop();\n                mediaRecorder.stream.getTracks().forEach((track)=>track.stop());\n                setIsRecording(false);\n            } else {\n                resolve();\n            }\n        });\n    }, [\n        mediaRecorder,\n        audioChunks\n    ]);\n    const getAudioBlob = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (audioChunks.length === 0) {\n            console.log(\"No audio chunks available\");\n            return null;\n        }\n        const blob = new Blob(audioChunks, {\n            type: \"audio/mp3\"\n        });\n        console.log(\"Created audio blob:\", blob.size, \"bytes\");\n        return blob;\n    }, [\n        audioChunks\n    ]);\n    return {\n        isRecording,\n        startRecording,\n        stopRecording,\n        getAudioBlob\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VBdWRpb1JlY29yZGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QztBQUV2QyxNQUFNRSxtQkFBbUI7SUFDOUIsTUFBTSxDQUFDQyxhQUFhQyxlQUFlLEdBQUdKLCtDQUFRQSxDQUFDO0lBQy9DLE1BQU0sQ0FBQ0ssZUFBZUMsaUJBQWlCLEdBQUdOLCtDQUFRQSxDQUF1QjtJQUN6RSxNQUFNLENBQUNPLGFBQWFDLGVBQWUsR0FBR1IsK0NBQVFBLENBQVMsRUFBRTtJQUV6RCxNQUFNUyxpQkFBaUJSLGtEQUFXQSxDQUFDO1FBQ2pDLElBQUk7WUFDRlMsUUFBUUMsR0FBRyxDQUFDO1lBQ1osTUFBTUMsU0FBUyxNQUFNQyxVQUFVQyxZQUFZLENBQUNDLFlBQVksQ0FBQztnQkFBRUMsT0FBTztZQUFLO1lBQ3ZFTixRQUFRQyxHQUFHLENBQUM7WUFFWixNQUFNTSxXQUFXLElBQUlDLGNBQWNOO1lBQ25DTixpQkFBaUJXO1lBQ2pCVCxlQUFlLEVBQUU7WUFFakJTLFNBQVNFLGVBQWUsR0FBRyxDQUFDQztnQkFDMUJWLFFBQVFDLEdBQUcsQ0FBQyx5QkFBeUJTLE1BQU1DLElBQUksQ0FBQ0MsSUFBSSxFQUFFO2dCQUN0RCxJQUFJRixNQUFNQyxJQUFJLENBQUNDLElBQUksR0FBRyxHQUFHO29CQUN2QmQsZUFBZSxDQUFDZSxTQUFXOytCQUFJQTs0QkFBUUgsTUFBTUMsSUFBSTt5QkFBQztnQkFDcEQ7WUFDRjtZQUVBSixTQUFTTyxPQUFPLEdBQUc7Z0JBQ2pCZCxRQUFRQyxHQUFHLENBQUM7Z0JBQ1pILGVBQWUsRUFBRTtZQUNuQjtZQUVBUyxTQUFTUSxNQUFNLEdBQUc7Z0JBQ2hCZixRQUFRQyxHQUFHLENBQUM7WUFDZDtZQUVBTSxTQUFTUyxPQUFPLEdBQUcsQ0FBQ047Z0JBQ2xCVixRQUFRaUIsS0FBSyxDQUFDLHdCQUF3QlA7WUFDeEM7WUFFQUgsU0FBU1csS0FBSyxDQUFDO1lBQ2Z4QixlQUFlO1FBQ2pCLEVBQUUsT0FBT3VCLE9BQU87WUFDZGpCLFFBQVFpQixLQUFLLENBQUMsK0JBQStCQTtZQUM3QyxNQUFNQTtRQUNSO0lBQ0YsR0FBRyxFQUFFO0lBRUwsTUFBTUUsZ0JBQWdCNUIsa0RBQVdBLENBQUM7UUFDaEMsT0FBTyxJQUFJNkIsUUFBYyxDQUFDQztZQUN4QixJQUFJMUIsaUJBQWlCQSxjQUFjMkIsS0FBSyxLQUFLLFlBQVk7Z0JBQ3ZEdEIsUUFBUUMsR0FBRyxDQUFDO2dCQUVaTixjQUFjNEIsZ0JBQWdCLENBQUMsUUFBUTtvQkFDckN2QixRQUFRQyxHQUFHLENBQUMsa0NBQWtDSixZQUFZMkIsTUFBTTtvQkFDaEVIO2dCQUNGO2dCQUVBMUIsY0FBYzhCLFdBQVc7Z0JBQ3pCOUIsY0FBYytCLElBQUk7Z0JBQ2xCL0IsY0FBY08sTUFBTSxDQUFDeUIsU0FBUyxHQUFHQyxPQUFPLENBQUMsQ0FBQ0MsUUFBVUEsTUFBTUgsSUFBSTtnQkFDOURoQyxlQUFlO1lBQ2pCLE9BQU87Z0JBQ0wyQjtZQUNGO1FBQ0Y7SUFDRixHQUFHO1FBQUMxQjtRQUFlRTtLQUFZO0lBRS9CLE1BQU1pQyxlQUFldkMsa0RBQVdBLENBQUM7UUFDL0IsSUFBSU0sWUFBWTJCLE1BQU0sS0FBSyxHQUFHO1lBQzVCeEIsUUFBUUMsR0FBRyxDQUFDO1lBQ1osT0FBTztRQUNUO1FBQ0EsTUFBTThCLE9BQU8sSUFBSUMsS0FBS25DLGFBQWE7WUFBRW9DLE1BQU07UUFBWTtRQUN2RGpDLFFBQVFDLEdBQUcsQ0FBQyx1QkFBdUI4QixLQUFLbkIsSUFBSSxFQUFFO1FBQzlDLE9BQU9tQjtJQUNULEdBQUc7UUFBQ2xDO0tBQVk7SUFFaEIsT0FBTztRQUNMSjtRQUNBTTtRQUNBb0I7UUFDQVc7SUFDRjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2hvb2tzL3VzZUF1ZGlvUmVjb3JkZXIudHM/MTg3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBjb25zdCB1c2VBdWRpb1JlY29yZGVyID0gKCkgPT4ge1xuICBjb25zdCBbaXNSZWNvcmRpbmcsIHNldElzUmVjb3JkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW21lZGlhUmVjb3JkZXIsIHNldE1lZGlhUmVjb3JkZXJdID0gdXNlU3RhdGU8TWVkaWFSZWNvcmRlciB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbYXVkaW9DaHVua3MsIHNldEF1ZGlvQ2h1bmtzXSA9IHVzZVN0YXRlPEJsb2JbXT4oW10pO1xuXG4gIGNvbnN0IHN0YXJ0UmVjb3JkaW5nID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZygnUmVxdWVzdGluZyBtaWNyb3Bob25lIGFjY2Vzcy4uLicpO1xuICAgICAgY29uc3Qgc3RyZWFtID0gYXdhaXQgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoeyBhdWRpbzogdHJ1ZSB9KTtcbiAgICAgIGNvbnNvbGUubG9nKCdNaWNyb3Bob25lIGFjY2VzcyBncmFudGVkJyk7XG4gICAgICBcbiAgICAgIGNvbnN0IHJlY29yZGVyID0gbmV3IE1lZGlhUmVjb3JkZXIoc3RyZWFtKTtcbiAgICAgIHNldE1lZGlhUmVjb3JkZXIocmVjb3JkZXIpO1xuICAgICAgc2V0QXVkaW9DaHVua3MoW10pO1xuXG4gICAgICByZWNvcmRlci5vbmRhdGFhdmFpbGFibGUgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ1JlY2VpdmVkIGF1ZGlvIGNodW5rOicsIGV2ZW50LmRhdGEuc2l6ZSwgJ2J5dGVzJyk7XG4gICAgICAgIGlmIChldmVudC5kYXRhLnNpemUgPiAwKSB7XG4gICAgICAgICAgc2V0QXVkaW9DaHVua3MoKGNodW5rcykgPT4gWy4uLmNodW5rcywgZXZlbnQuZGF0YV0pO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZWNvcmRlci5vbnN0YXJ0ID0gKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnTWVkaWFSZWNvcmRlciBzdGFydGVkJyk7XG4gICAgICAgIHNldEF1ZGlvQ2h1bmtzKFtdKTtcbiAgICAgIH07XG5cbiAgICAgIHJlY29yZGVyLm9uc3RvcCA9ICgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ01lZGlhUmVjb3JkZXIgc3RvcHBlZCcpO1xuICAgICAgfTtcblxuICAgICAgcmVjb3JkZXIub25lcnJvciA9IChldmVudCkgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdNZWRpYVJlY29yZGVyIGVycm9yOicsIGV2ZW50KTtcbiAgICAgIH07XG5cbiAgICAgIHJlY29yZGVyLnN0YXJ0KDEwMDApO1xuICAgICAgc2V0SXNSZWNvcmRpbmcodHJ1ZSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFjY2Vzc2luZyBtaWNyb3Bob25lOicsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfSwgW10pO1xuXG4gIGNvbnN0IHN0b3BSZWNvcmRpbmcgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlPHZvaWQ+KChyZXNvbHZlKSA9PiB7XG4gICAgICBpZiAobWVkaWFSZWNvcmRlciAmJiBtZWRpYVJlY29yZGVyLnN0YXRlICE9PSAnaW5hY3RpdmUnKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTdG9wcGluZyBNZWRpYVJlY29yZGVyLi4uJyk7XG4gICAgICAgIFxuICAgICAgICBtZWRpYVJlY29yZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ3N0b3AnLCAoKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ01lZGlhUmVjb3JkZXIgc3RvcHBlZCwgY2h1bmtzOicsIGF1ZGlvQ2h1bmtzLmxlbmd0aCk7XG4gICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9KTtcblxuICAgICAgICBtZWRpYVJlY29yZGVyLnJlcXVlc3REYXRhKCk7XG4gICAgICAgIG1lZGlhUmVjb3JkZXIuc3RvcCgpO1xuICAgICAgICBtZWRpYVJlY29yZGVyLnN0cmVhbS5nZXRUcmFja3MoKS5mb3JFYWNoKCh0cmFjaykgPT4gdHJhY2suc3RvcCgpKTtcbiAgICAgICAgc2V0SXNSZWNvcmRpbmcoZmFsc2UpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9LCBbbWVkaWFSZWNvcmRlciwgYXVkaW9DaHVua3NdKTtcblxuICBjb25zdCBnZXRBdWRpb0Jsb2IgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKGF1ZGlvQ2h1bmtzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgY29uc29sZS5sb2coJ05vIGF1ZGlvIGNodW5rcyBhdmFpbGFibGUnKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoYXVkaW9DaHVua3MsIHsgdHlwZTogJ2F1ZGlvL21wMycgfSk7XG4gICAgY29uc29sZS5sb2coJ0NyZWF0ZWQgYXVkaW8gYmxvYjonLCBibG9iLnNpemUsICdieXRlcycpO1xuICAgIHJldHVybiBibG9iO1xuICB9LCBbYXVkaW9DaHVua3NdKTtcblxuICByZXR1cm4ge1xuICAgIGlzUmVjb3JkaW5nLFxuICAgIHN0YXJ0UmVjb3JkaW5nLFxuICAgIHN0b3BSZWNvcmRpbmcsXG4gICAgZ2V0QXVkaW9CbG9iLFxuICB9O1xufTsgIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlQ2FsbGJhY2siLCJ1c2VBdWRpb1JlY29yZGVyIiwiaXNSZWNvcmRpbmciLCJzZXRJc1JlY29yZGluZyIsIm1lZGlhUmVjb3JkZXIiLCJzZXRNZWRpYVJlY29yZGVyIiwiYXVkaW9DaHVua3MiLCJzZXRBdWRpb0NodW5rcyIsInN0YXJ0UmVjb3JkaW5nIiwiY29uc29sZSIsImxvZyIsInN0cmVhbSIsIm5hdmlnYXRvciIsIm1lZGlhRGV2aWNlcyIsImdldFVzZXJNZWRpYSIsImF1ZGlvIiwicmVjb3JkZXIiLCJNZWRpYVJlY29yZGVyIiwib25kYXRhYXZhaWxhYmxlIiwiZXZlbnQiLCJkYXRhIiwic2l6ZSIsImNodW5rcyIsIm9uc3RhcnQiLCJvbnN0b3AiLCJvbmVycm9yIiwiZXJyb3IiLCJzdGFydCIsInN0b3BSZWNvcmRpbmciLCJQcm9taXNlIiwicmVzb2x2ZSIsInN0YXRlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImxlbmd0aCIsInJlcXVlc3REYXRhIiwic3RvcCIsImdldFRyYWNrcyIsImZvckVhY2giLCJ0cmFjayIsImdldEF1ZGlvQmxvYiIsImJsb2IiLCJCbG9iIiwidHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useAudioRecorder.ts\n"));

/***/ })

});